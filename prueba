#include <stdio.h> 
#include <string.h> 
#include <fstream> 
#include <iostream>
#include <algorithm>
#include <sstream>
#include <string>
#include <algorithm>
#include <list>

#pragma warning(disable : 4996)

using namespace std;

list<string> comand;

string C1 = "CREAR_TABLA";
string C2 = "INSERTAR";
string C4 = "SELECT_*_DESDE";
string C3 = "BORRAR_DESDE_ID";
string C5 = "MODIFICAR";
string C6 = "BORRAR_TABLA";


void removespaceWord(string str)
{
    //elimina la ", ) (" y lo convierte en " "
    for (int i = 0; i < str.length(); i++)
    {
        if (str[i] == ',' || str[i] == '(' || str[i] == ')' || str[i] == '-')
            str[i] = ' ';
    }

    istringstream ss(str);
    //ingreso el comando a la lista
    while (ss)
    {
        string word;
        ss >> word;
        comand.push_back(word);
    }
}



bool verify(string index)
{
     
    ifstream open(index.data());
    if (open.fail())
        return 0; //no existe
    return 1;//si existe
}

void append(string name,string data)
{
   
    std::fstream fs;

        fs.open(name.data(), std::ios_base::app);
        fs <<data.data()<<"\n";
        fs.close();
   
}

void write(string name,string data,int ver)
{
 
    ofstream ofs(name.data());
  
    if (ver == 1)
    {
        string name2 = name.data();
        append(name2, data);
        string index = "index.txt";
        append(index, name);
    }
    
}


void identifier()
{
   

    if (C1 == comand.front())
    {
        list<string> ::iterator t = comand.begin();
        advance(t, 1);
        string name=*t;
        name = name + ".txt";
       

        bool pre = 0;
        pre = verify(name);


        if (pre == 0)
        {
            write(name, "", 1);
            cout << "creating \n\n";
        }

        else
            cout << "tabla ya existe!\n";
    }
    if (C2 == comand.front())
    {
        list<string> ::iterator t = comand.begin();
        advance(t, 1);
        string name = *t;
        name = name + ".txt";

        string valores;
        cout << "ingresa data: ";
        getline(cin, valores);

        bool pre = 0;
        pre = verify(name);

        append(name, valores);
    }
    /*if (C3 == (x.front()))
    {
        elim();
    }
    if (C4.compare(x.front()) == 0)
    {
        list<string>::iterator it = lista.begin();
        for (it = lista.begin(); it != lista.end(); it++)
            temporal.push_back(*it);

        lista.clear();
        int counter = 0;
        list<string>::iterator temp = temporal.begin();
        advance(temp, 1);
        string name = *temp;
        advance(temp, 2);
        string id = *temp;
        temp = temporal.begin();
        lista.push_back(*temp);
        lista.push_back(name);
        lista.push_back(id);

        temporal.clear();
        select();
    }

    if (C5 == (x.front()))
    {
        list<string>::iterator it = lista.begin();
        string comand = *it;
        advance(it, 1);
        string name = *it;
        advance(it, 2);
        string fila = *it;
        advance(it, 2);
        string dato = *it;
        advance(it, 4);
        string id = *it;
        lista.clear();
        lista.push_back(comand);
        lista.push_back(name);
        lista.push_back(fila);
        lista.push_back(dato);
        lista.push_back(id);


        modificar();
        cout << "mod\n";
    }
    if (C6 == (x.front()))
    {
        eliminarTab();
    }
    //else { cout << "SYNTAX_ERROR: COMAND NOT FOUND"; }
    */

}

int main()
{
    string index = "index.txt";
    bool pre = 3;

    pre= verify(index);

    if (pre == 0)
        write(index," ",0);
 
    string coamndo;

    while (true)
    {
        cout << "ingrese comando: ";
        getline(cin, coamndo);
        removespaceWord(coamndo);

        identifier();
        comand.clear();
    }
    
}



/*
int main(int argc, char* argv[])
{

    FILE* archivo;
    archivo = fopen("texto.txt", "r");
    char linea[300];
    int total = 0;
    int cont = 0;
    int opcion = 0;
    while (fgets(linea, sizeof(linea), archivo))
    {
        cout << "Columna deseas imprimir , escribe el numero :" << endl;
        cin >> opcion;
        cont++;
        if (opcion == cont)
            cout << linea;

    }


    fclose(archivo);

    system("PAUSE");
    return 0;
}
*/
